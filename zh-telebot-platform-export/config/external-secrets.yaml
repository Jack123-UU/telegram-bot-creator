# TeleBot Platform - External Secrets Configuration
# This file configures how sensitive data is injected from HashiCorp Vault

apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: telebot-bot-secrets
  namespace: telebot-platform
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-secret-store
    kind: SecretStore
  target:
    name: telebot-bot-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        BOT_TOKEN: "{{ .bot_token }}"
        WEBHOOK_SECRET: "{{ .webhook_secret }}"
  data:
    - secretKey: bot_token
      remoteRef:
        key: telebot/bot
        property: token
    - secretKey: webhook_secret
      remoteRef:
        key: telebot/bot
        property: webhook_secret

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: telebot-payment-secrets
  namespace: telebot-platform
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-secret-store
    kind: SecretStore
  target:
    name: telebot-payment-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        TRON_PRIVATE_KEY: "{{ .tron_private_key }}"
        TRON_ADDRESS: "{{ .tron_address }}"
        PAYMENT_WEBHOOK_SECRET: "{{ .payment_webhook_secret }}"
  data:
    - secretKey: tron_private_key
      remoteRef:
        key: telebot/payment
        property: tron_private_key
    - secretKey: tron_address
      remoteRef:
        key: telebot/payment
        property: tron_address
    - secretKey: payment_webhook_secret
      remoteRef:
        key: telebot/payment
        property: webhook_secret

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: telebot-database-secrets
  namespace: telebot-platform
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-secret-store
    kind: SecretStore
  target:
    name: telebot-database-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        DATABASE_URL: "postgresql+asyncpg://{{ .username }}:{{ .password }}@{{ .host }}:{{ .port }}/{{ .database }}"
        REDIS_URL: "redis://{{ .redis_password }}@{{ .redis_host }}:{{ .redis_port }}/0"
  data:
    - secretKey: username
      remoteRef:
        key: telebot/database
        property: username
    - secretKey: password
      remoteRef:
        key: telebot/database
        property: password
    - secretKey: host
      remoteRef:
        key: telebot/database
        property: host
    - secretKey: port
      remoteRef:
        key: telebot/database
        property: port
    - secretKey: database
      remoteRef:
        key: telebot/database
        property: database
    - secretKey: redis_password
      remoteRef:
        key: telebot/redis
        property: password
    - secretKey: redis_host
      remoteRef:
        key: telebot/redis
        property: host
    - secretKey: redis_port
      remoteRef:
        key: telebot/redis
        property: port

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: telebot-api-secrets
  namespace: telebot-platform
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-secret-store
    kind: SecretStore
  target:
    name: telebot-api-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        INTERNAL_TOKEN: "{{ .internal_token }}"
        JWT_SECRET_KEY: "{{ .jwt_secret }}"
        AES_KEY: "{{ .aes_key }}"
        API_KEY: "{{ .api_key }}"
  data:
    - secretKey: internal_token
      remoteRef:
        key: telebot/api
        property: internal_token
    - secretKey: jwt_secret
      remoteRef:
        key: telebot/api
        property: jwt_secret
    - secretKey: aes_key
      remoteRef:
        key: telebot/encryption
        property: aes_key
    - secretKey: api_key
      remoteRef:
        key: telebot/api
        property: api_key

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: telebot-storage-secrets
  namespace: telebot-platform
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-secret-store
    kind: SecretStore
  target:
    name: telebot-storage-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        MINIO_ACCESS_KEY: "{{ .access_key }}"
        MINIO_SECRET_KEY: "{{ .secret_key }}"
        S3_BUCKET: "{{ .bucket_name }}"
        S3_REGION: "{{ .region }}"
  data:
    - secretKey: access_key
      remoteRef:
        key: telebot/storage
        property: access_key
    - secretKey: secret_key
      remoteRef:
        key: telebot/storage
        property: secret_key
    - secretKey: bucket_name
      remoteRef:
        key: telebot/storage
        property: bucket_name
    - secretKey: region
      remoteRef:
        key: telebot/storage
        property: region

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: telebot-monitoring-secrets
  namespace: telebot-platform
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-secret-store
    kind: SecretStore
  target:
    name: telebot-monitoring-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        SENTRY_DSN: "{{ .sentry_dsn }}"
        GRAFANA_API_KEY: "{{ .grafana_api_key }}"
        ALERTMANAGER_WEBHOOK: "{{ .alertmanager_webhook }}"
  data:
    - secretKey: sentry_dsn
      remoteRef:
        key: telebot/monitoring
        property: sentry_dsn
    - secretKey: grafana_api_key
      remoteRef:
        key: telebot/monitoring
        property: grafana_api_key
    - secretKey: alertmanager_webhook
      remoteRef:
        key: telebot/monitoring
        property: alertmanager_webhook